<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>c++ on Vishesh Handa's blog</title><link>http://vhanda.in/tags/c++/</link><description>Recent content in c++ on Vishesh Handa's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 23 Jun 2010 22:02:10 +0000</lastBuildDate><atom:link href="http://vhanda.in/tags/c++/index.xml" rel="self" type="application/rss+xml"/><item><title>Qt : QMultiHash and QHashIterator</title><link>http://vhanda.in/blog/2010/06/Qt-QMultiHash-and-QHashIterator/</link><pubDate>Wed, 23 Jun 2010 22:02:10 +0000</pubDate><guid>http://vhanda.in/blog/2010/06/Qt-QMultiHash-and-QHashIterator/</guid><description>Qt&amp;rsquo;s implementation of QMultiHash iterator is a little non-intuitive.
One would expect a multi hash to be implemented as &amp;lt;uniqueKey, list of values&amp;gt; pairs, where the list of values could even be a set. But QMultiHash is derived from QHash, and it stores the same key multiple times. It stores a number of unique key, value pairs.
This can cause some amount of confusion while iterating over a multi-hash with a QHashIterator.</description></item><item><title>Forward Declaration Woes</title><link>http://vhanda.in/blog/2010/06/Forward-Declaration-Woes/</link><pubDate>Mon, 07 Jun 2010 04:42:04 +0000</pubDate><guid>http://vhanda.in/blog/2010/06/Forward-Declaration-Woes/</guid><description>I&amp;rsquo;m ashamed to admit it, but I&amp;rsquo;ve never really understood forward declaration in C++. I know it&amp;rsquo;s used to speed up compile times, and it helps me fix cyclic dependency issues, but I&amp;rsquo;ve never really understood it. To this date, my approach of forward declaration has been - &amp;ldquo;Forward declare most of the things, and then include header files to fix compiler warnings.&amp;rdquo; I know that&amp;rsquo;s not the best approach, and I should have read about it earlier, but &amp;hellip;</description></item></channel></rss>